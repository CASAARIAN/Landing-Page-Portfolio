/* Estilos de la clase */
.hover {
  background: var(--rose);
  transition: all 0.3s ease;
  padding: 10px;
  border-radius: 1rem;
}
.hover:hover {
  background: var(--purple);
  transition: all 0.3s ease;
}

/* active */
.active:active {
  color: var(--rose);
  transition: all 0.3s ease;
}

/* visited */
.visited:visited {
  color: var(--purple);
}

/* link */
a.link:link {
  color: var(--rose);
}

/* focus */

.focus {
  padding: 5px 10px;
  border-radius: 1rem;
  outline: none;
  border: none;
}

.focus:focus {
  background: var(--light-red);
  color: white;
}

/* Cajas */
.flex {
  display: flex;
}

.caja {
  width: 100px;
  height: 100px;
  background-color: var(--light-red);
  border-radius: 1rem;
}

/* first-child */
.first .caja:first-child {
  background: var(--purple);
}

/* last-child */
.last .caja:last-child {
  background: var(--purple);
}

/* first-of-type  */
.first-of-type .caja:first-of-type {
  background-color: var(--purple);
}
/* nth-child odd afecta a los numeros impar */
.nth-child-odd .caja:nth-child(odd) {
  background: var(--purple);
}

/* nth-child even  afecta a los numeros par*/
.nth-child-even .caja:nth-child(even) {
  background: var(--purple);
}

/* nth-child-number afecta solo al numero que le pongas */
.nth-child-number .caja:nth-child(3) {
  background: var(--purple);
}

/* nth-child-n afecta a cada cuantos elementos seleccionamos*/
.nth-child-n .caja:nth-child(2n) {
  background: var(--purple);
}
/* nth-child-number-n afecta a partir de que elemento seleccionamos  y cada cuantos (n).*/
.nth-child-number-n .caja:nth-child(3n + 1) {
  background: var(--purple);
}

/* first-letter afecta a la primera letra de un parrafo (p) */
.first-letter::first-letter {
  background: var(--purple);
  font-size: 1.5rem;
  border-radius: 10px;
}

/* first-line  afecta a la primera linea de un p√°rrafo*/
.first-line::first-line {
  background: var(--purple);
}

/* before 
crea un pseudo-elemento antes del elemento. 
Se usa normalmente para agregar contenido est√©tico a un elemento.*/
/*ü§©*/
.before::before {
  content: "(ü§©) ";
}

/* after
crea un pseudo-elemento despu√©s del elemento. 
Se usa normalmente para agregar contenido est√©tico a un elemento. */
/*üçï*/
.after::after {
  content: " (üçï)";
}

/* placeholder 
representa al placeholder de un elemento <input> */
.input-placeholder {
  outline: none;
  border: none;
  border-radius: 1rem;
}

.input-placeholder::placeholder {
  background: cornflowerblue;
  color: white;
}
